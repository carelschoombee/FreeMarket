@using FreeMarket.Models
@model ShoppingCartViewModel

<table class="table table-bordered-custom table-condensed table-responsive">
    <tr class="well">
        <th class="col-sm-1">
            Remove
        </th>
        <th class="col-sm-1">
            Image
        </th>
        <th class="col-sm-3">
            Description
        </th>
        <th class="col-sm-1">
            Deliver To
        </th>
        <th class="col-sm-1">
            Price
        </th>
        <th class="col-sm-1">
            Quantity
        </th>
        <th class="col-sm-1">
            Total
        </th>
    </tr>

    @for (int i = 0; i < Model.Cart.Body.OrderDetails.Count; i++)
    {
       <tr>
           <td data-label="Remove:">
               @Html.EditorFor(model => Model.Cart.Body.OrderDetails[i].Selected)
               @Html.HiddenFor(model => Model.Cart.Body.OrderDetails[i].ProductNumber)
               @Html.HiddenFor(model => Model.Cart.Body.OrderDetails[i].ItemNumber)
               @Html.HiddenFor(model => Model.Cart.Body.OrderDetails[i].SupplierNumber)
               @Html.HiddenFor(model => Model.Cart.Body.OrderDetails[i].CourierNumber)
               @Html.HiddenFor(model => Model.Cart.Body.OrderDetails[i].CustodianNumber)
           </td>
           <td>
               <img src="@Url.Action("RenderImage", "Image", new { id = Model.Cart.Body.OrderDetails[i].MainImageNumber, defaultSize = PictureSize.Small })" alt="@Model.Cart.Body.OrderDetails[i].ProductDescription"/>
           </td>
           <td>
               @Html.Action("GetDimensions", "Product", new { productNumber = Model.Cart.Body.OrderDetails[i].ProductNumber })&nbsp;@Model.Cart.Body.OrderDetails[i].ProductDescription supplied by <span class="text-info">@Model.Cart.Body.OrderDetails[i].SupplierName</span>
               @Html.HiddenFor(model => Model.Cart.Body.OrderDetails[i].ProductDescription)
           </td>
           <td>
               <a data-id="@Url.Action("CourierSelectionModalFromCart", "ShoppingCart")/@Model.Cart.Body.OrderDetails[i].ProductNumber?supplierNumber=@Model.Cart.Body.OrderDetails[i].SupplierNumber&amp;quantity=@Model.Cart.Body.OrderDetails[i].Quantity&amp;addressString=@Model.Cart.Body.OrderDetails[i].DeliveryAddress"
                  class="text-success editClass"><span style="white-space :pre-line" aria-hidden="true">@Model.Cart.Body.OrderDetails[i].DeliveryAddress</span></a>
               
           </td>
           <td data-label="Price:">
               @String.Format("{0:C}", Model.Cart.Body.OrderDetails[i].Price)
           </td>
           <td class="text-center" data-label="Quantity:">
               @Html.EditorFor(model => Model.Cart.Body.OrderDetails[i].Quantity, new { htmlAttributes = new { @style = "width: 75px" } })
               @Html.ValidationMessageFor(model => Model.Cart.Body.OrderDetails[i].Quantity, null, new {@class = "text-danger" })
           </td>
           <td data-label="Total:">
               @String.Format("{0:C}", Model.Cart.Body.OrderDetails[i].OrderItemValue)
           </td>
       </tr>
    }
</table>

