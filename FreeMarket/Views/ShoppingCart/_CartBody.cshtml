@using FreeMarket.Models
@model ShoppingCartViewModel

<table class="table table-bordered-custom table-condensed table-responsive table-striped">
    <tr class="well">
        <th class="col-sm-1">
            Remove
        </th>
        <th class="col-sm-1">
            Image
        </th>
        <th class="col-sm-3">
            Description
        </th>
        <th class="col-sm-1">
            Price
        </th>
        <th class="col-sm-1">
            Quantity
        </th>
        <th class="col-sm-1">
            Total
        </th>
    </tr>

    @for (int i = 0; i < Model.Cart.Body.OrderDetails.Count; i++)
    {
        if (Model.Cart.Body.OrderDetails[i].Highlighted == true)
        {
            <tr class="well-red">
                <td data-label="Remove:">
                    @Html.EditorFor(model => Model.Cart.Body.OrderDetails[i].Selected)
                    @Html.HiddenFor(model => Model.Cart.Body.OrderDetails[i].ProductNumber)
                    @Html.HiddenFor(model => Model.Cart.Body.OrderDetails[i].ItemNumber)
                    @Html.HiddenFor(model => Model.Cart.Body.OrderDetails[i].SupplierNumber)
                    @Html.HiddenFor(model => Model.Cart.Body.OrderDetails[i].CourierNumber)
                    @Html.HiddenFor(model => Model.Cart.Body.OrderDetails[i].CustodianNumber)
                </td>
                <td>
                    <img class="img-thumbnail" src="@Url.Action("RenderImage", "Image", new { id = Model.Cart.Body.OrderDetails[i].MainImageNumber, defaultSize = PictureSize.Small })" alt="@Model.Cart.Body.OrderDetails[i].ProductDescription" title="Model.Cart.Body.OrderDetails[i].ProductDescription" />
                </td>
                <td>
                    @Html.Action("GetDimensions", "Product", new { productNumber = Model.Cart.Body.OrderDetails[i].ProductNumber })&nbsp;@Model.Cart.Body.OrderDetails[i].ProductDescription supplied by <span class="text-info">@Model.Cart.Body.OrderDetails[i].SupplierName</span>
                    @Html.HiddenFor(model => Model.Cart.Body.OrderDetails[i].ProductDescription)
                </td>
                <td data-label="Price:">
                    @String.Format("{0:C}", Model.Cart.Body.OrderDetails[i].Price)
                </td>
                <td class="text-center" data-label="Qty:">
                    @Html.EditorFor(model => Model.Cart.Body.OrderDetails[i].Quantity, new { htmlAttributes = new { @style = "width: 75px" } })
                    @Html.ValidationMessageFor(model => Model.Cart.Body.OrderDetails[i].Quantity, null, new { @class = "text-danger" })
                </td>
                <td data-label="Total:">
                    @String.Format("{0:C}", Model.Cart.Body.OrderDetails[i].OrderItemValue)
                </td>
            </tr>
        }
        else
        {
            <tr class="well">
                <td data-label="Remove:">
                    @Html.EditorFor(model => Model.Cart.Body.OrderDetails[i].Selected)
                    @Html.HiddenFor(model => Model.Cart.Body.OrderDetails[i].ProductNumber)
                    @Html.HiddenFor(model => Model.Cart.Body.OrderDetails[i].ItemNumber)
                    @Html.HiddenFor(model => Model.Cart.Body.OrderDetails[i].SupplierNumber)
                    @Html.HiddenFor(model => Model.Cart.Body.OrderDetails[i].CourierNumber)
                    @Html.HiddenFor(model => Model.Cart.Body.OrderDetails[i].CustodianNumber)
                </td>
                <td>
                    <img class="img-thumbnail" src="@Url.Action("RenderImage", "Image", new { id = Model.Cart.Body.OrderDetails[i].MainImageNumber, defaultSize = PictureSize.Small })" alt="@Model.Cart.Body.OrderDetails[i].ProductDescription" title="Model.Cart.Body.OrderDetails[i].ProductDescription" />
                </td>
                <td>
                    @Html.Action("GetDimensions", "Product", new { productNumber = Model.Cart.Body.OrderDetails[i].ProductNumber })&nbsp;@Model.Cart.Body.OrderDetails[i].ProductDescription supplied by <span class="text-info">@Model.Cart.Body.OrderDetails[i].SupplierName</span>
                    @Html.HiddenFor(model => Model.Cart.Body.OrderDetails[i].ProductDescription)
                </td>
                <td data-label="Price:">
                    @String.Format("{0:C}", Model.Cart.Body.OrderDetails[i].Price)
                </td>
                <td class="text-center" data-label="Qty:">
                    @Html.EditorFor(model => Model.Cart.Body.OrderDetails[i].Quantity, new { htmlAttributes = new { @style = "width: 75px" } })
                    @Html.ValidationMessageFor(model => Model.Cart.Body.OrderDetails[i].Quantity, null, new { @class = "text-danger" })
                </td>
                <td data-label="Total:">
                    @String.Format("{0:C}", Model.Cart.Body.OrderDetails[i].OrderItemValue)
                </td>
            </tr>
        }
    }
    }
</table>

