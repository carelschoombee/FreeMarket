@model FreeMarket.Models.ManageLoginsViewModel
@using Microsoft.Owin.Security
@{
    ViewBag.Title = "Manage your external logins";
}

<h2 class="text-center">@ViewBag.Title</h2>
<hr />

<div class="container center_div">
    <p class="text-success text-center">@ViewBag.StatusMessage</p>

    @{
        var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
        if (loginProviders.Count() == 0)
        {
            <div>
                <p>
                    There are no external authentication services configured.
                </p>
            </div>
        }
        else
        {
            if (Model.CurrentLogins.Count > 0)
            {
                <h4 class="text-center">Existing Logins</h4>
                <table class="table table-bordered-custom">
                    <tbody>
                    @foreach (var account in Model.CurrentLogins)
                    {
                            <tr>
                                <td>
                                    @account.LoginProvider

                                    @if (account.LoginProvider == "Google")
                                    {
                                        <img src="~/Content/Images/google.png" />
                                    }
                                    else if (account.LoginProvider == "Facebook")
                                    {
                                        <img src="~/Content/Images/facebook.png" />
                                    }
                                </td>
                                <td>
                                    @if (ViewBag.ShowRemoveButton)
                                    {
                                        using (Html.BeginForm("RemoveLogin", "Manage"))
                                        {
                                            @Html.AntiForgeryToken()
                                            <div>
                                                @Html.Hidden("loginProvider", account.LoginProvider)
                                                @Html.Hidden("providerKey", account.ProviderKey)
                                                <input type="submit" class="btn btn-default" value="Remove" title="Remove this @account.LoginProvider login from your account" />
                                            </div>
                                        }
                                    }
                                    else
                                    {
                                        @: &nbsp;
                                }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            if (Model.OtherLogins.Count > 0)
            {
                <h4 class="text-center">Add more Logins</h4>
                using (Html.BeginForm("LinkLogin", "Manage"))
                {
                    @Html.AntiForgeryToken()
                    <div id="socialLoginList">
                        <p>
                            @foreach (AuthenticationDescription p in Model.OtherLogins)
                            {
                                <button type="submit" class="btn btn-default" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account">@p.AuthenticationType</button>
                            }
                        </p>
                    </div>
                }
            }
        }
    }
</div>
